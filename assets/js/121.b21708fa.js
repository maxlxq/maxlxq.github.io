(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{513:function(s,t,n){"use strict";n.r(t);var a=n(27),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"reactdom-render-调用栈-commit-阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reactdom-render-调用栈-commit-阶段"}},[s._v("#")]),s._v(" ReactDOM.render 调用栈 —— commit 阶段")]),s._v(" "),n("p",[s._v("render 阶段从 beginWork 切入，摸索出了 Fiber 节点的创建链路和 Fiber 树的构建链路。")]),s._v(" "),n("p",[s._v("这里从 completeWork 切入，寻找 Fiber 树和 DOM 树之间的关联。")]),s._v(" "),n("h2",{attrs:{id:"completework-将-fiber-节点映射为-dom-节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completework-将-fiber-节点映射为-dom-节点"}},[s._v("#")]),s._v(" completeWork —— 将 Fiber 节点映射为 DOM 节点")]),s._v(" "),n("p",[s._v("从 performUnitOfWork 到 completeWork，中间的调用链路为：")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n *       performUnitOfWork\n *               |\n *       completeUnitOfWork\n *               |\n *          completeWork\n */")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("details",[n("summary",[s._v("\nperformUnitOfWork 是如何调用 completeUnitOfWork 的\n")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("performUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("unitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("alternate\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" next\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xxx "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* xxx 条件 */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... 额外操作")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建当前节点的子节点")]),s._v("\n    next "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("beginWork$1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" subtreeRenderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... 额外操作")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建当前节点的子节点")]),s._v("\n    next "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("beginWork$1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" subtreeRenderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 completeUnitOfWork")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("completeUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将当前节点更新为新创建出的 Fiber 节点")]),s._v("\n    workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" next\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])]),s._v(" "),n("p",[s._v("performUnitOfWork 每次会尝试调用 beginWork 来创建当前节点的子节点，若创建出的子节点为空，则说明当前节点是一个叶子节点。"),n("br"),s._v("\n按照深度优先遍历的原则，当遍历到叶子节点时，需要回归。此时，就会调用 completeUnitOfWork ，执行当前节点对应的 completeWork 逻辑。")]),s._v(" "),n("h2",{attrs:{id:"completework-工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completework-工作原理"}},[s._v("#")]),s._v(" completeWork 工作原理")]),s._v(" "),n("details",[n("summary",[s._v("\n提取 completeWork 的源码结构和主体逻辑\n")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("completeWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" renderLanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取出 Fiber 节点的属性值，存储在 newProps 里")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" newProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pendingProps\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据 workInProgress 节点的 tag 属性的不同，决定要进入哪段逻辑")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Other"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ...... */")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ClassComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .....")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HostRoot"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// h1 节点的类型属于 HostComponent，因此这里为你讲解的是这段逻辑")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HostComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("popHostContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" rootContainerInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRootHostContainer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" type "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("type\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断 current 节点是否存在，因为目前是挂载阶段，因此 current 节点是不存在的")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateHostComponent$1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ref "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ref"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("markRef$1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里首先是针对异常情况进行 return 处理")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接下来就为 DOM 节点的创建做准备了")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" currentHostContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getHostContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// _wasHydrated 是一个与服务端渲染有关的值，这里不用关注")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" _wasHydrated "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("popHydrationState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否是服务端渲染")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_wasHydrated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里不用关注，请你关注 else 里面的逻辑")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prepareToHydrateHostInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" currentHostContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("markUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这一步很关键， createInstance 的作用是创建 DOM 节点")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" currentHostContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// appendAllChildren 会尝试把上一步创建好的 DOM 节点挂载到 DOM 树上去")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendAllChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stateNode 用于存储当前 Fiber 节点对应的 DOM 节点")]),s._v("\n            workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instance\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// finalizeInitialChildren 用来为 DOM 节点设置属性")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalizeInitialChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("markUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HostText"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" SuspenseComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HostPortal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ContextProvider"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Unknown unit of work tag ("')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"). This error is likely caused by a bug in React. Please file an issue."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br")])])]),s._v(" "),n("ol",[n("li",[s._v("completeWork 的核心逻辑是一段体量巨大的 switch 语句，在这段 switch 语句中，completeWork 将根据 workInProgress 节点的 tag 属性的不同，进入不同的 DOM 节点的创建、处理逻辑")]),s._v(" "),n("li",[s._v("completeWork 中的 current、workInProgress 分别对应的是通过 alternate 连接的 Fiber 树")])]),s._v(" "),n("p",[s._v("其中 workInProgress 树代表的是 当前正在 render 中的树，而 current 树则代表已经存在的树")]),s._v(" "),n("p",[s._v("workInProgress 节点和 current 节点 之间通过 alternate 属性相互连接。")]),s._v(" "),n("p",[s._v("在组件挂载阶段，current 树只有一个 rootFiber 节点，并没有其他内容。此时 workInProgress 节点对应的 current 节点是 null。")]),s._v(" "),n("p",[s._v("总结，关于 completeWork：")]),s._v(" "),n("ol",[n("li",[s._v("completeWork 工作内容：负责处理 Fiber 节点到 DOM 节点的映射处理。")]),s._v(" "),n("li",[s._v("completeWork 内部有三个 关键动作：\n"),n("ol",[n("li",[s._v("创建 DOM 节点 CreateInstance")]),s._v(" "),n("li",[s._v("将 DOM 节点插入到 DOM 树中 AppendAllChildren")]),s._v(" "),n("li",[s._v("为 DOM 节点设置属性 FinalizeInitialChildren")])])]),s._v(" "),n("li",[s._v("创建好的 DOM 节点会被赋值给 workInProgress 节点的 stateNode 属性。所以定位一个 Fiber 对应的 DOM 节点时，访问它的 stateNode 属性就可以了。")]),s._v(" "),n("li",[s._v("将 DOM 节点插入到 DOM 树的操作是通过 appendAllChildren 函数来完成的。")])]),s._v(" "),n("p",[s._v("说是将 DOM 节点插入到 DOM 树里去，实际上是将子 Fiber 节点所对应的 DOM 节点挂载到其父 Fiber 节点所对应的 DOM 节点里去。")]),s._v(" "),n("blockquote",[n("p",[s._v("Q: 那么如果执行 appendAllChildren 时，父级的 DOM 节点还不存在怎么办？")]),s._v(" "),n("p",[s._v("A: 比如 h1 节点作为第一个进入 completeWork 的节点，它的父节点 div 对应的 DOM 就尚不存在。"),n("br"),s._v("\n其实不存在也没关系，反正 h1 DOM 节点被创建后，会作为 h1 Fiber 节点的 stateNode 属性存在，丢不掉的。"),n("br"),s._v("\n当父节点 div 进入 appendAllChildren 逻辑后，会逐个向下查找并添加自己的后代节点，"),n("br"),s._v("\n这时候，h1 就会被它的父级 DOM 节点“收入囊中”啦~")])]),s._v(" "),n("h2",{attrs:{id:"completeunitofwork-开启收集-effectlist-的-大循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completeunitofwork-开启收集-effectlist-的-大循环"}},[s._v("#")]),s._v(' completeUnitOfWork —— 开启收集 EffectList 的 "大循环"')]),s._v(" "),n("p",[s._v("completeUnitOfWork 的作用是开启一个大循环，重复做下面三件事：")]),s._v(" "),n("ol",[n("li",[s._v("针对传入的当前节点，调用 completeWork")]),s._v(" "),n("li",[s._v("将当前节点的副作用链 EffectList 插入到其父节点对应的副作用链 EffectList 中")]),s._v(" "),n("li",[s._v("以当前节点为起点，循环遍历其兄弟节点及其父节点。当遍历到兄弟节点时，将 return 掉当前调用，触发兄弟节点对应的 performUnitOfWork 逻辑；而遍历到父节点时，则会直接进入下一轮循环，重复1、2逻辑")])]),s._v(" "),n("h2",{attrs:{id:"completeunitofwork-开启下一轮循环的原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completeunitofwork-开启下一轮循环的原则"}},[s._v("#")]),s._v(" completeUnitOfWork 开启下一轮循环的原则")]),s._v(" "),n("p",[s._v("步骤三 相关源码")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取当前节点的兄弟节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" siblingFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sibling\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若兄弟节点存在")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("siblingFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 workInProgress 赋值为当前节点的兄弟节点")]),s._v("\n    workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" siblingFiber\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将正在进行的 completeUnitOfWork 逻辑 return 掉")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若兄弟节点不存在，则 completeWork 会被赋值为 returnFiber，也就是当前节点的父节点")]),s._v("\n  completedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" returnFiber\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// workInProgress 与 completedWork 保持一致")]),s._v("\n  workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" completedWork\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("completedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("当前节点处理完成之后，寻找下一个可以处理的节点。")]),s._v(" "),n("p",[s._v("值得注意的是，completeUnitOfWork 中处理兄弟节点和父节点的顺序是：先检查兄弟节点是否存在，若存在则优先处理兄弟节点；"),n("br"),s._v("\n确认没有待处理的兄弟节点后，才转而处理父节点。这意味着，completeWork 的执行是严格自底向上的，子节点的 completeWork 总会先于父节点执行。")]),s._v(" "),n("h2",{attrs:{id:"副作用链-effectlist-的设计与实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#副作用链-effectlist-的设计与实现"}},[s._v("#")]),s._v(" 副作用链 effectList 的设计与实现")]),s._v(" "),n("p",[s._v("无论是 beginWork 还是 completeWork，应用对象都是 workInProgress 树上的节点。"),n("br"),s._v("\nrender 阶段是一个递归过程，递归的对象就是这个 workInProgress 树。")]),s._v(" "),n("p",[n("strong",[s._v("render 阶段的工作目标是 找出界面中需要处理的更新。")])]),s._v(" "),n("p",[s._v("并非是所有的节点上都会产生需要处理的更新。"),n("br"),s._v("\n比如在 挂载阶段，React 会发现实际只需要对 App 节点执行一个挂载操作即可；")]),s._v(" "),n("p",[s._v("更新阶段与挂载阶段的主要区别在于 更新阶段的 current 树不为空。")]),s._v(" "),n("blockquote",[n("p",[s._v("怎么才能让渲染器又快又好地定位到真正需要更新的节点？")])]),s._v(" "),n("p",[s._v("commit 只负责实现更新，而不负责寻找更新。此时，副作用链 effectList 的价值体现出来了。")]),s._v(" "),n("p",[s._v("副作用链 effectList 可以理解为 render 阶段 工作成果的集合："),n("br"),s._v("\n每个 Fiber 节点都维护者一个属于它自己的 effectList，effectList 在数据结构上以链表的形式存在，"),n("br"),s._v("\n链表内的每一个元素都是一个 Fiber 节点。这些 Fiber 节点需要满足两个共性：")]),s._v(" "),n("ol",[n("li",[s._v("都是当前 Fiber 节点的后代节点")]),s._v(" "),n("li",[s._v("都有待处理的副作用")])]),s._v(" "),n("p",[s._v("Fiber 节点的 effectList 里记录的并非它自身的更新，而是其需要更新的后代节点。")]),s._v(" "),n("p",[s._v("因为 completeWork 是自底向上执行的，所以每次处理到一个节点，都将当前节点的 effectList 插入到其父节点的 effectList 中。"),n("br"),s._v("\n那么当所有节点的 completeWork 都执行完毕时，在 rootFiber 上，拿到了一个存储了当前 Fiber 树所有 effect Fiber 的 effectList。")]),s._v(" "),n("p",[s._v("把所有需要更新的 Fiber 节点单独串成一串链表，方便后续有针对性地对它们进行更新，这就是所谓的 收集副作用 的过程。")]),s._v(" "),n("p",[s._v("effectList 链表在 Fiber 节点是通过 firstEffect 和 lastEffect 来维护的。"),n("br"),s._v("\n其中 firstEffect 表示 effectList 的第一个节点，lastEffect 记录最后一个节点。")]),s._v(" "),n("p",[s._v("effectList 的创建，为 firstEffect 和 lastEffect 各赋值一个引用即可。"),n("br"),s._v("\ncompleteUnitOfWork 源码中提取相关逻辑如下：")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若副作用类型的值大于“PerformedWork”，则说明这里存在一个需要记录的副作用")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PerformedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returnFiber 是当前节点的父节点")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若父节点的 effectList 不为空，则将当前节点追加到 effectList 的末尾去")]),s._v("\n    returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" completedWork\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若父节点的 effectList 为空，则当前节点就是 effectList 的 firstEffect")]),s._v("\n    returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("firstEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" completedWork\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 effectList 的 lastEffect 指针后移一位")]),s._v("\n  returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" completedWork\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"commit-阶段工作流简析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commit-阶段工作流简析"}},[s._v("#")]),s._v(" commit 阶段工作流简析")]),s._v(" "),n("p",[s._v("commit 会在 performSyncWorkOnRoot 中被调用。")]),s._v(" "),n("p",[s._v("commit 共分为 3 个阶段：before mutation、mutation、layout")]),s._v(" "),n("ul",[n("li",[s._v("before mutation 阶段，这个阶段 DOM 节点还没有被渲染到界面上去，过程会触发 getSnapshotBeforeUpdate，也会处理 useEffect 钩子相关的调度逻辑。")]),s._v(" "),n("li",[s._v("mutation 阶段，负责 DOM 节点的渲染。遍历 effectList，根据 flags 的不同，执行不同的 DOM 操作。")]),s._v(" "),n("li",[s._v("layout 阶段，处理 DOM 渲染完毕之后的收尾逻辑。比如 调用 componentDidMount/componentDidUpdate，调用 useLayoutEffect 钩子函数的回调等。除此之外，还会把 fiberRoot 的 current 指针指向 workInProgress Fiber 树。")])]),s._v(" "),n("p",[s._v("commit 阶段 是一个 绝对同步的过程。render 阶段可以同步也可以异步。")])])}),[],!1,null,null,null);t.default=e.exports}}]);