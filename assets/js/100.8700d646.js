(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{472:function(e,t,r){"use strict";r.r(t);var s=r(27),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"promise"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[e._v("#")]),e._v(" Promise")]),e._v(" "),r("blockquote",[r("p",[e._v("Promise 对象用于表示一个异步操作的最终完成/失败及其结果值。")])]),e._v(" "),r("h3",{attrs:{id:"三个状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三个状态"}},[e._v("#")]),e._v(" 三个状态")]),e._v(" "),r("ul",[r("li",[e._v("Pending：处于等待状态，可以转移至执行态或拒绝态")]),e._v(" "),r("li",[e._v("Fulfilled：处于执行状态，不能继续转移状态，必须拥有一个不可变的终值")]),e._v(" "),r("li",[e._v("rejected：处于拒绝状态，不能继续转移状态，必须拥有一个不可变的据因")])]),e._v(" "),r("h3",{attrs:{id:"then-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#then-方法"}},[e._v("#")]),e._v(" Then 方法")]),e._v(" "),r("p",[e._v("一个 promise 必须提供一个 then 方法以访问其当前值、终值和据因")]),e._v(" "),r("p",[r("code",[e._v("promise.then(onFulfilled, onRejected)")])])])}),[],!1,null,null,null);t.default=a.exports}}]);