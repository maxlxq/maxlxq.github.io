(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{399:function(t,a,s){"use strict";s.r(a);var r=s(27),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[t._v("#")]),t._v(" 垃圾回收")]),t._v(" "),s("h2",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("h2",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),s("h2",{attrs:{id:"v8下分析堆中的垃圾数据是如何回收的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8下分析堆中的垃圾数据是如何回收的"}},[t._v("#")]),t._v(" V8下分析堆中的垃圾数据是如何回收的")]),t._v(" "),s("h3",{attrs:{id:"代际假说"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代际假说"}},[t._v("#")]),t._v(" 代际假说")]),t._v(" "),s("h3",{attrs:{id:"分代收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分代收集"}},[t._v("#")]),t._v(" 分代收集")]),t._v(" "),s("h3",{attrs:{id:"垃圾回收器的工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收器的工作流程"}},[t._v("#")]),t._v(" 垃圾回收器的工作流程")]),t._v(" "),s("p",[t._v("标记-清除-整理")]),t._v(" "),s("h4",{attrs:{id:"主"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主"}},[t._v("#")]),t._v(" 主")]),t._v(" "),s("h4",{attrs:{id:"副"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#副"}},[t._v("#")]),t._v(" 副")]),t._v(" "),s("h3",{attrs:{id:"全停顿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全停顿"}},[t._v("#")]),t._v(" 全停顿")]),t._v(" "),s("h3",{attrs:{id:"判断内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断内存泄漏"}},[t._v("#")]),t._v(" 判断内存泄漏")])])}),[],!1,null,null,null);a.default=e.exports}}]);