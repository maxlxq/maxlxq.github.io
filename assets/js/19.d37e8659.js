(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{386:function(t,a,r){"use strict";r.r(a);var s=r(27),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"tree-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tree-树"}},[t._v("#")]),t._v(" Tree 树")]),t._v(" "),r("h2",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("h2",{attrs:{id:"二叉查找树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉查找树"}},[t._v("#")]),t._v(" 二叉查找树")]),t._v(" "),r("h2",{attrs:{id:"平衡二叉树树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树树"}},[t._v("#")]),t._v(" 平衡二叉树树")]),t._v(" "),r("h2",{attrs:{id:"平衡二叉树之-avl-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树之-avl-树"}},[t._v("#")]),t._v(" 平衡二叉树之 AVL 树")]),t._v(" "),r("h2",{attrs:{id:"平衡二叉树之-红黑树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树之-红黑树"}},[t._v("#")]),t._v(" 平衡二叉树之 红黑树")]),t._v(" "),r("h2",{attrs:{id:"b-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-树"}},[t._v("#")]),t._v(" B 树")]),t._v(" "),r("h2",{attrs:{id:"b-树-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-树-2"}},[t._v("#")]),t._v(" B+ 树")]),t._v(" "),r("h2",{attrs:{id:"b-树-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-树-3"}},[t._v("#")]),t._v(" B* 树")]),t._v(" "),r("h2",{attrs:{id:"trie-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trie-树"}},[t._v("#")]),t._v(" Trie 树")]),t._v(" "),r("p",[t._v("Trie 可以只用一个前缀便可以在一部字典中找到想要的单词。")]),t._v(" "),r("p",[r("strong",[t._v("核心思想就是通过最大限度地减少无谓的字符串比较，使得查询高效率，即「用空间换时间」，再利用共同前缀来提高查询效率。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);