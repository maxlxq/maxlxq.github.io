(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{390:function(t,e,r){"use strict";r.r(e);var a=r(27),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),r("blockquote",[r("p",[t._v("转载自掘金文章："),r("a",{attrs:{href:"https://juejin.cn/post/6898635086657224717",target:"_blank",rel:"noopener noreferrer"}},[t._v("React17 源码分析"),r("OutboundLink")],1),t._v("\nauthor: "),r("a",{attrs:{href:"https://juejin.cn/user/1415826705485128",target:"_blank",rel:"noopener noreferrer"}},[t._v("xfz"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_15-版本特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-版本特点"}},[t._v("#")]),t._v(" 15 版本特点")]),t._v(" "),r("p",[t._v("React 15 的架构分为两层")]),t._v(" "),r("ul",[r("li",[t._v("Reconciler 协调器：用于收集需要更新的组件、patch Vnode 更新标识")]),t._v(" "),r("li",[t._v("Renderer 渲染器：将变化后的组件进行 dom-diff => 渲染到页面上")])]),t._v(" "),r("blockquote",[r("p",[t._v("15版本的reconciler 是 stack-reconciler。采用递归方式工作，同步进行，在生成虚拟dom树并diff的时候无法中断。")]),t._v(" "),r("p",[t._v("当组件层级过深时，会造成线程一直被占用，浏览器无法布局和绘制，造成丢帧、卡顿")])]),t._v(" "),r("h2",{attrs:{id:"_16-版本特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-版本特点"}},[t._v("#")]),t._v(" 16 版本特点")]),t._v(" "),r("p",[t._v("React 16 的架构分为三层")]),t._v(" "),r("ul",[r("li",[t._v("Scheduler 调度器：调度任务的优先级，高优先级的优先进入 Reconciler 阶段")]),t._v(" "),r("li",[t._v("Reconciler 协调器：收集需要更新的组件：fiber root 构建 - patch - Vnode 标识")]),t._v(" "),r("li",[t._v("Renderer 渲染器：将变化后的组件进行 dom-diff => 渲染到页面上")])]),t._v(" "),r("p",[t._v("Fiber 相见文章："),r("a",{attrs:{href:"https://blog.ahulib.com/blog/Fiber%E8%AF%A6%E8%A7%A3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fiber详解"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"_17-版本特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-版本特点"}},[t._v("#")]),t._v(" 17 版本特点")]),t._v(" "),r("p",[t._v("使用 lanes 模型替代 expirationTime 模型")]),t._v(" "),r("blockquote",[r("p",[t._v("在 V16 版本中，以 expirationTime 的大小来衡量优先级，expirationTime 越大，则优先级越高，但如果有一个")])]),t._v(" "),r("h3",{attrs:{id:"生命周期变更"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期变更"}},[t._v("#")]),t._v(" 生命周期变更")]),t._v(" "),r("h3",{attrs:{id:"hook-是什么-常用的-api-最佳实践。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hook-是什么-常用的-api-最佳实践。"}},[t._v("#")]),t._v(" Hook 是什么？常用的 API，最佳实践。")]),t._v(" "),r("h3",{attrs:{id:"fiber-是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fiber-是什么"}},[t._v("#")]),t._v(" Fiber 是什么？")]),t._v(" "),r("h3",{attrs:{id:"一次渲染流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一次渲染流程"}},[t._v("#")]),t._v(" 一次渲染流程")]),t._v(" "),r("h3",{attrs:{id:"一次更新流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一次更新流程"}},[t._v("#")]),t._v(" 一次更新流程")]),t._v(" "),r("h2",{attrs:{id:"源码解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源码解析"}},[t._v("#")]),t._v(" 源码解析")])])}),[],!1,null,null,null);e.default=s.exports}}]);